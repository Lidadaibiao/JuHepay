[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:09,446 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bdb2a92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:11,835 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:11,851 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'gateway-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:11,867 ERROR [main][NacosPropertySourceBuilder.java:109] - parse data from Nacos error,dataId:gateway-service.yaml,data:zuul:
  retryable: true
  add-host-header: true
  ignoredServices: "*"
  sensitiveHeaders: "*"
#路由规则
zuul:
  retryable: true
  add-host-header: true
  ignoredServices: "*"
  sensitiveHeaders: "*"
  routes:
    operation-application:
      path: /operation/**
      stripPrefix: false
    merchant-application:
      path: /merchant/**
      stripPrefix: false
    uaa-service: 
      path: /uaa/**
      stripPrefix: false

feign:
  hystrix:
    enabled: true
  compression:
    request:
      enabled: true # 配置请求GZIP压缩
      mime-types: ["text/xml","application/xml","application/json"] # 配置压缩支持的MIME TYPE
      min-request-size: 2048 # 配置压缩数据大小的下限
    response:
      enabled: true # 配置响应GZIP压缩

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 93000  # 设置熔断超时时间  default 1000
        timeout:
          enabled: true # 打开超时熔断功能 default true

ribbon:
  nacos:
    enabled: true # 不知道是否生效
  ConnectTimeout: 3000 # 设置连接超时时间 default 2000
  ReadTimeout: 20000    # 设置读取超时时间  default 5000
  OkToRetryOnAllOperations: false # 对所有操作请求都进行重试  default false
  MaxAutoRetriesNextServer: 1    # 切换实例的重试次数  default 1
  MaxAutoRetries: 1     # 对当前实例的重试次数 default 0,
while constructing a mapping
 in 'reader', line 1, column 1:
    zuul:
    ^
found duplicate key zuul
 in 'reader', line 7, column 1:
    zuul:
    ^

	at org.yaml.snakeyaml.constructor.SafeConstructor.processDuplicateKeys(SafeConstructor.java:100)
	at org.yaml.snakeyaml.constructor.SafeConstructor.flattenMapping(SafeConstructor.java:70)
	at org.yaml.snakeyaml.constructor.SafeConstructor.constructMapping2ndStep(SafeConstructor.java:183)
	at org.yaml.snakeyaml.constructor.BaseConstructor.constructMapping(BaseConstructor.java:434)
	at org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap.construct(SafeConstructor.java:521)
	at org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:204)
	at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:193)
	at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:159)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:127)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:547)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:161)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.createProperties(YamlPropertiesFactoryBean.java:135)
	at org.springframework.beans.factory.config.YamlPropertiesFactoryBean.getObject(YamlPropertiesFactoryBean.java:115)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.loadNacosData(NacosPropertySourceBuilder.java:100)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceBuilder.build(NacosPropertySourceBuilder.java:75)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadNacosDataIfPresent(NacosPropertySourceLocator.java:179)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.loadApplicationConfiguration(NacosPropertySourceLocator.java:155)
	at com.alibaba.cloud.nacos.client.NacosPropertySourceLocator.locate(NacosPropertySourceLocator.java:88)
	at org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration.initialize(PropertySourceBootstrapConfiguration.java:94)
	at org.springframework.boot.SpringApplication.applyInitializers(SpringApplication.java:649)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:373)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.gateway.GatewayBootstrap.main(GatewayBootstrap.java:22)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:11,883 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@484841769 {name='gateway-service.yaml', properties={}}, NacosPropertySource@879311295 {name='jwt.yaml', properties={siging-key=shanju123}}]}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:11,936 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:13,554 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:13,554 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:13,971 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:13,986 WARN [main][EndpointId.java:135] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:14,356 INFO [main][GenericScope.java:294] - BeanFactory id=56a43de7-b899-3ea0-a936-c08998255f50
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:14,757 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bdb2a92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,459 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56010 (http)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,474 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56010"]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,490 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,490 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,506 INFO [main][DirectJDKLog.java:173] - An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,506 INFO [main][DirectJDKLog.java:173] - Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,506 INFO [main][DirectJDKLog.java:173] - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:15,521 INFO [main][DirectJDKLog.java:173] - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:16,608 INFO [main][DirectJDKLog.java:173] - OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:17,325 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:17,325 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 5374 ms
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:17,848 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:17,848 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:17,864 DEBUG [main][HystrixPlugins.java:386] - Created HystrixDynamicProperties. Using class : com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:17,879 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d88f893
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,119 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,234 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,234 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,289 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,289 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,289 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,289 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,289 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,289 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,297 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,297 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,297 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,297 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,297 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,307 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,307 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,307 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,307 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,307 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,697 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:21,882 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:22,229 INFO [main][UserDetailsServiceAutoConfiguration.java:86] - 

Using generated security password: 51fc091d-80ff-4b05-83d7-c89f185fecaf

[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:22,468 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@713999c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@6682e6a5, org.springframework.security.web.header.HeaderWriterFilter@2dac2e1b, org.springframework.security.web.authentication.logout.LogoutFilter@161d95c6, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6d7b001b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cc75b25, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d47dfed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6060146b, org.springframework.security.web.session.SessionManagementFilter@64a1116a, org.springframework.security.web.access.ExceptionTranslationFilter@6826b70f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@730bea0]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:22,483 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2035d65b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c53c235, org.springframework.security.web.header.HeaderWriterFilter@34cd65ac, org.springframework.security.web.authentication.logout.LogoutFilter@1b409a79, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2dcd0e41, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7272ee51, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@240a2619, org.springframework.security.web.session.SessionManagementFilter@61911947, org.springframework.security.web.access.ExceptionTranslationFilter@1d2d8846, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52f9e8bb]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:22,599 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:24,444 INFO [main][ZuulFilterInitializer.java:65] - Starting filter initializer
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:24,828 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56010"]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:24,844 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56010 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:25,013 INFO [main][NacosServiceRegistry.java:62] - nacos registry, gateway-service 192.168.223.1:56010 register finished
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:25,013 INFO [main][StartupInfoLogger.java:59] - Started GatewayBootstrap in 18.172 seconds (JVM running for 29.445)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:25,799 INFO [RMI TCP Connection(8)-127.0.0.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:25,799 INFO [RMI TCP Connection(8)-127.0.0.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:25,815 INFO [RMI TCP Connection(8)-127.0.0.1][FrameworkServlet.java:546] - Completed initialization in 16 ms
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:55,329 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:55,345 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:55,345 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:55,730 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c1abcd7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:55,815 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:56,817 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:57,002 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:57,049 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:57,049 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:57,071 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:57,071 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@908722588 {name='uaa-service.yaml', properties={spring.datasource.username=root, spring.datasource.druid=, spring.datasource.url=jdbc:mysql://127.0.0.1:3306/shanjupay_uaa?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, server.servlet.context-path=/uaa, spring.datasource.password=root}}, NacosPropertySource@496757837 {name='jwt.yaml', properties={siging-key=shanju123}}, NacosPropertySource@1548271808 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.max-active=20, spring.datasource.druid.min-idle=5, spring.datasource.druid.web-stat-filter.principal-cookie-name=admin, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-millis=60000, spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow-sql-millis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.stat-view-servlet.login-password=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*, spring.datasource.druid.web-stat-filter.session-stat-enable=false, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.web-stat-filter.enabled=true, spring.datasource.druid.web-stat-filter.session-stat-max-count=1000, spring.datasource.druid.stat-view-servlet.reset-enable=false, spring.datasource.druid.filter.stat.log-slow-sql=true, spring.datasource.druid.web-stat-filter.url-pattern=/*, spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.web-stat-filter.principal-session-name=admin, spring.datasource.druid.web-stat-filter.profile-enable=true, spring.datasource.password=yourpassword, spring.datasource.username=root, spring.datasource.druid.stat-view-servlet.deny=192.168.1.73, spring.datasource.druid.stat-view-servlet.login-username=admin, spring.datasource.druid.stat-view-servlet.enabled=true, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.druid.initial-size=5, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.druid.aop-patterns=com.shanjupay.*.service.*, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000}}, NacosPropertySource@17600354 {name='spring-boot-http.yaml', properties={spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.servlet.context‐path=/, management.endpoints. web.exposure.include=refresh,health,info,env, spring.http.encoding.force=true, server.tomcat.protocol_header=x‐forwarded‐proto, spring.massage.encoding=UTF-8, server.tomcat.remote_ip_header=x‐forwarded‐for, server.use‐forward‐headers=true}}]}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:57,087 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,637 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,653 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,668 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,691 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,691 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,691 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,691 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,691 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:58,691 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,038 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,053 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,154 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 47ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,307 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,439 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,439 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:36:59,454 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,294 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,326 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,326 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.shanjupay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,326 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,326 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,557 INFO [main][GenericScope.java:294] - BeanFactory id=ae80b025-88db-38cd-939c-3aa9e29bb895
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,611 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,773 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a591ca82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,911 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,943 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,943 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$29531986] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,974 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,980 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:00,996 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,012 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,012 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,012 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$9b92b600] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,012 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$2e3cbe58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,027 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,027 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,027 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$ee81f812] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,043 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e24d00d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,058 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$6d3f9406] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,058 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,058 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,876 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,883 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,899 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:01,899 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$bab090e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,663 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,679 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,685 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,685 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,748 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,748 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,832 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,865 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,866 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f2d35cb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,866 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,881 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$2ca958b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,885 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1254a13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,885 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b3720c2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,901 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6e88f21b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,901 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,917 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,917 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$95546949] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,949 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,964 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e330e7a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,964 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,964 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,986 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:02,986 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,017 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,033 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,033 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$bfc59616] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,048 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,048 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,048 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,064 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,064 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,079 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,086 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,086 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,086 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,117 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c1abcd7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,534 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,549 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,549 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,549 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,565 INFO [main][DirectJDKLog.java:173] - An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,565 INFO [main][DirectJDKLog.java:173] - Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,565 INFO [main][DirectJDKLog.java:173] - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:03,565 INFO [main][DirectJDKLog.java:173] - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:04,668 INFO [main][DirectJDKLog.java:173] - OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:04,821 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:04,821 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 7718 ms
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:05,392 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,272 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-538} connected
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,410 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-539} connected
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,425 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-540} connected
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,457 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-541} connected
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,526 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-542} connected
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,526 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,942 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:06,974 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 8
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,058 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,127 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,127 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,143 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\ASUS\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 1883242496 bytes
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,159 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@383cdd4d
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,174 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,212 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,259 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,259 DEBUG [main][Loggers.java:249] - Unsafe is available
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 16
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 16
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,644 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,660 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:07,660 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:08,492 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:08,878 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,047 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,047 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,116 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,147 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,147 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,179 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,216 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,216 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,248 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,248 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,248 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,248 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,263 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,317 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,317 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,317 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,332 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,332 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,332 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,332 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : transaction-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,464 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : transaction-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,464 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,479 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,479 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,479 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,495 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,495 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,495 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,495 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,495 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,501 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,501 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,501 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,517 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,533 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,533 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,533 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.shanjupay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2CisExistAccountByUsername%2Clogin%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryBundleByTenantType%2CqueryTenants%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CqueryAllBundle%2CcreateAccount%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CcreateTenantAndAccount%2CaccountPassword%2CbindTenant%26pid%3D37156%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1591587429179&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,664 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,664 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,680 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,680 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,680 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,680 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,680 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : transaction-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,695 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,702 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,717 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,717 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:09,717 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.shanjupay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D37156%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1591587429664&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,641 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,641 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,641 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,641 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,687 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,687 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,710 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:13,988 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:14,758 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:14,774 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,506 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,506 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,506 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,506 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,506 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,506 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,691 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4af0c50, org.springframework.security.web.context.SecurityContextPersistenceFilter@c6c84fa, org.springframework.security.web.header.HeaderWriterFilter@66b90ab3, org.springframework.security.web.authentication.logout.LogoutFilter@51f4439e, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@8315e4a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@28f8ce2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64688978, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e055ce1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ffd35dd, org.springframework.security.web.session.SessionManagementFilter@33fec21, org.springframework.security.web.access.ExceptionTranslationFilter@61bd0845, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34fc315d]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:15,707 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3aab42d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dd2e453, org.springframework.security.web.header.HeaderWriterFilter@62cf86d6, org.springframework.security.web.authentication.logout.LogoutFilter@14d18029, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7438c3d5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@433b1597, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d5cd210, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6badb08c, org.springframework.security.web.session.SessionManagementFilter@2a6c751f, org.springframework.security.web.access.ExceptionTranslationFilter@465d1345, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6706da3d]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,293 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,694 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : transaction-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,694 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,694 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,694 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : transaction-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : transaction-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : transaction-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,778 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.uua.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,794 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,878 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,894 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,894 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,909 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.uua.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,909 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.uua.api.OauthClientDetailsService to url dubbo://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,909 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,909 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.uua.api.OauthClientDetailsService url dubbo://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=37156&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,941 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,963 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:16,963 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,048 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,063 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,063 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,126 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 37156 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,126 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,126 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,665 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:17,665 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:18,229 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:01 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:18,282 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:18,282 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:18,282 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:18,298 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.137.1:20881, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:18,314 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : transaction-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,131 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,147 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.uua.api.OauthClientDetailsService url dubbo://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=37156&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,147 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,153 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,200 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,200 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,232 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,247 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,269 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,285 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,285 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,285 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,285 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.137.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=37156&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1591587439269, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,285 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,285 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,385 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,385 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,385 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@3d01ea33" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" version="1.0.0" dynamic="true" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,470 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.223.1:56020 register finished
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:19,470 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 25.745 seconds (JVM running for 28.282)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,003 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,003 INFO [RMI TCP Connection(2)-127.0.0.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,067 INFO [RMI TCP Connection(2)-127.0.0.1][FrameworkServlet.java:546] - Completed initialization in 64 ms
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,069 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,077 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,099 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,129 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:137] - {conn-10005, stmt-20000} created
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,230 WARN [com.alibaba.nacos.naming.push.receiver][HostReactor.java:110] - out of date data received, old-t: 1591587440208, new-t: 1591587440168
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,389 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:137] - {conn-10005, stmt-20000, rs-50000} query executed. 245.8322 millis. /* ping */ SELECT 1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,389 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} open
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,389 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} Header: [1]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,389 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} Result: [1]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,436 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} closed
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,436 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:137] - {conn-10005, stmt-20000} closed
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,436 DEBUG [RMI TCP Connection(6)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,489 DEBUG [RMI TCP Connection(6)-127.0.0.1][RedisClient.java:261] - Trying to get a Redis connection for: RedisURI [host='localhost', port=6379]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,821 INFO [RMI TCP Connection(6)-127.0.0.1][EpollProvider.java:68] - Starting without optional epoll library
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,821 INFO [RMI TCP Connection(6)-127.0.0.1][KqueueProvider.java:70] - Starting without optional kqueue library
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,836 DEBUG [RMI TCP Connection(6)-127.0.0.1][DefaultEventLoopGroupProvider.java:64] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,836 DEBUG [RMI TCP Connection(6)-127.0.0.1][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.channel.nio.NioEventLoopGroup
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,836 DEBUG [RMI TCP Connection(6)-127.0.0.1][DefaultEventLoopGroupProvider.java:77] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@bcd63a7, existing ref count 0
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,867 DEBUG [RMI TCP Connection(6)-127.0.0.1][RedisClient.java:734] - Resolved SocketAddress localhost:6379 using RedisURI [host='localhost', port=6379]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,867 DEBUG [RMI TCP Connection(6)-127.0.0.1][AbstractRedisClient.java:304] - Connecting to Redis at localhost:6379
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,905 DEBUG [lettuce-nioEventLoop-6-1][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,905 DEBUG [lettuce-nioEventLoop-6-1][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,905 DEBUG [lettuce-nioEventLoop-6-1][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,905 DEBUG [lettuce-nioEventLoop-6-1][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,921 DEBUG [lettuce-nioEventLoop-6-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,921 DEBUG [lettuce-nioEventLoop-6-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,921 DEBUG [lettuce-nioEventLoop-6-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@c13508
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,936 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:154] - [channel=0xf6499241, [id: 0x63baba88] (inactive), chid=0x1] channelRegistered()
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:263] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1] channelActive()
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][DefaultEndpoint.java:371] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][DefaultEndpoint.java:376] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, epid=0x1] activating endpoint
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][DefaultEndpoint.java:453] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, epid=0x1] flushCommands()
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][DefaultEndpoint.java:468] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][ConnectionWatchdog.java:159] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][ConnectionWatchdog.java:159] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:277] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1] channelActive() done
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:20,952 DEBUG [lettuce-nioEventLoop-6-1][AbstractRedisClient.java:337] - Connecting to Redis at localhost:6379: Success
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,005 DEBUG [lettuce-nioEventLoop-6-1][ConnectionWatchdog.java:127] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7c392704)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,005 DEBUG [lettuce-nioEventLoop-6-1][ConnectionWatchdog.java:127] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7c392704)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,106 DEBUG [RMI TCP Connection(6)-127.0.0.1][RedisChannelHandler.java:171] - dispatching command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,106 DEBUG [RMI TCP Connection(6)-127.0.0.1][DefaultEndpoint.java:339] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,121 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:341] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1] write(ctx, SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,121 DEBUG [RMI TCP Connection(6)-127.0.0.1][DefaultEndpoint.java:153] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,121 DEBUG [lettuce-nioEventLoop-6-1][CommandEncoder.java:99] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379] writing command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:536] - [[channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1], 1024, 1] Received: [[channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1], 1024, 1] bytes, {} commands in the stack
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:581] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][RedisStateMachine.java:93] - Decode LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][RedisStateMachine.java:190] - Decoded LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand], empty stack: false
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:536] - [[channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1], 1127, 1] Received: [[channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1], 1127, 1] bytes, {} commands in the stack
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][CommandHandler.java:581] - [channel=0xf6499241, /127.0.0.1:60160 -> localhost/127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][RedisStateMachine.java:93] - Decode LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:21,353 DEBUG [lettuce-nioEventLoop-6-1][RedisStateMachine.java:190] - Decoded LatencyMeteredCommand [type=INFO, output=StatusOutput [output=# Server
redis_version:3.2.100
redis_git_sha1:00000000
redis_git_dirty:0
redis_build_id:dd26f1f93c5130ee
redis_mode:standalone
os:Windows  
arch_bits:64
multiplexing_api:WinSock_IOCP
process_id:10152
run_id:98449921333e5ede7ee44fbe06dcb36c7c5a3e95
tcp_port:6379
uptime_in_seconds:7240
uptime_in_days:0
hz:10
lru_clock:14529137
executable:F:\develop\Redis\soft\Redis-x64-3.2.100\redis-server.exe
config_file:

# Clients
connected_clients:1
client_longest_output_list:0
client_biggest_input_buf:0
blocked_clients:0

# Memory
used_memory:689712
used_memory_human:673.55K
used_memory_rss:651920
used_memory_rss_human:636.64K
used_memory_peak:732480
used_memory_peak_human:715.31K
total_system_memory:0
total_system_memory_human:0B
used_memory_lua:37888
used_memory_lua_human:37.00K
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
mem_fragmentation_ratio:0.95
mem_allocator:jemalloc-3.6.0

# Persistence
loading:0
rdb_changes_since_last_save:0
rdb_bgsave_in_progress:0
rdb_last_save_time:1591583802
rdb_last_bgsave_status:ok
rdb_last_bgsave_time_sec:0
rdb_current_bgsave_time_sec:-1
aof_enabled:0
aof_rewrite_in_progress:0
aof_rewrite_scheduled:0
aof_last_rewrite_time_sec:-1
aof_current_rewrite_time_sec:-1
aof_last_bgrewrite_status:ok
aof_last_write_status:ok

# Stats
total_connections_received:7
total_commands_processed:67
instantaneous_ops_per_sec:0
total_net_input_bytes:3462
total_net_output_bytes:13268
instantaneous_input_kbps:0.00
instantaneous_output_kbps:0.00
rejected_connections:0
sync_full:0
sync_partial_ok:0
sync_partial_err:0
expired_keys:0
evicted_keys:0
keyspace_hits:11
keyspace_misses:0
pubsub_channels:0
pubsub_patterns:0
latest_fork_usec:136857
migrate_cached_sockets:0

# Replication
role:master
connected_slaves:0
master_repl_offset:0
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0

# CPU
used_cpu_sys:0.14
used_cpu_user:0.08
used_cpu_sys_children:0.00
used_cpu_user_children:0.00

# Cluster
cluster_enabled:0

# Keyspace
db0:keys=2,expires=0,avg_ttl=0
, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand], empty stack: true
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:37:46,801 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:4) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:16,817 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:4) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:19,163 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:19,174 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:19,180 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=user-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22230, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:19,621 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dfb659bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:19,738 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:20,629 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=user-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22230, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:20,861 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:20,867 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:21,130 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:21,146 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'user-service.yaml', group: 'SHANJUPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:21,146 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource {name='user-service.yaml'}, NacosPropertySource {name='spring-boot-mybatis-plus.yaml'}, NacosPropertySource {name='spring-boot-starter-druid.yaml'}, NacosPropertySource {name='spring-boot-http.yaml'}]}
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:21,168 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,574 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,589 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,652 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,874 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,890 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:23,937 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,037 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,153 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,153 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,322 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.user.api.AuthorizationService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,322 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.user.api.MenuService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,322 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.user.api.ResourceService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,322 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.user.api.TenantService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,322 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 4 annotated Dubbo's @Service Components { [Bean definition with name 'authorizationServiceImpl': Generic bean: class [com.shanjupay.user.service.AuthorizationServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-user\shanjupay-user-service\target\classes\com\shanjupay\user\service\AuthorizationServiceImpl.class], Bean definition with name 'menuServiceImpl': Generic bean: class [com.shanjupay.user.service.MenuServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-user\shanjupay-user-service\target\classes\com\shanjupay\user\service\MenuServiceImpl.class], Bean definition with name 'resourceServiceImpl': Generic bean: class [com.shanjupay.user.service.ResourceServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-user\shanjupay-user-service\target\classes\com\shanjupay\user\service\ResourceServiceImpl.class], Bean definition with name 'tenantServiceImpl': Generic bean: class [com.shanjupay.user.service.TenantServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [F:\develop\IntelliJ IDEA 2019.2\HomeWork\shanjupay\shanjupay-user\shanjupay-user-service\target\classes\com\shanjupay\user\service\TenantServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,338 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,338 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,538 INFO [main][GenericScope.java:294] - BeanFactory id=a45cf80d-82dc-3dec-8a2a-26b5bb559242
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,592 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,723 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c39c56bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,839 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,857 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$475da5c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,893 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,908 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,924 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,924 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,924 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,924 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$b99d423d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,939 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$4c474a95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,939 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,955 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,955 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c8c844f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,955 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$578d14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,977 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$8b4a2043] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,993 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:24,993 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:25,895 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:25,911 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:25,926 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:25,926 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$d8bb1d1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,744 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,744 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,760 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,760 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,829 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:4) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,829 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,860 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,882 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,882 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$10dde8f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,898 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,898 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4ab3e4f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,914 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1f2fd650] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,914 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d17c9869] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,929 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8c937e58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,929 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,945 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,945 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b35ef586] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,960 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,976 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$13b73df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,983 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,983 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,998 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:26,998 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,045 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,045 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$ddd02253] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,061 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,061 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,076 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,083 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,083 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,099 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,099 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,099 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,114 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,130 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dfb659bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,531 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56030 (http)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,546 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56030"]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,562 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,562 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,562 INFO [main][DirectJDKLog.java:173] - An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,562 INFO [main][DirectJDKLog.java:173] - Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,562 INFO [main][DirectJDKLog.java:173] - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:27,562 INFO [main][DirectJDKLog.java:173] - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:28,649 INFO [main][DirectJDKLog.java:173] - OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:28,803 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:28,803 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 7619 ms
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:29,320 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:30,085 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:34,447 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:34,795 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:34,848 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:34,848 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:34,864 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:34,864 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:35,211 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:35,566 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:35,597 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:35,612 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:35,628 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,570 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : uaa-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,733 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,733 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,733 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,755 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,755 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,755 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,786 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=user-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:37,802 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=user-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,259 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.137.1:20881 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xd64dba9b, L:/192.168.137.1:60476 - R:/192.168.137.1:20881]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,259 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient Lidabingzhang/192.168.137.1 connect to the server /192.168.137.1:20881, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,322 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=user-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,337 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=user-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,353 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=user-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, urls: [dubbo://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=37156&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,353 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=user-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, urls: [dubbo://192.168.137.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=37156&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587439269&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,360 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=user-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=13200&qos.enable=false&qos.port=22230&refer=application%3Duser-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Duaa-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D13200%26qos.enable%3Dfalse%26qos.port%3D22230%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1591587517733%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587517733&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,607 DEBUG [DubboServerHandler-192.168.137.1:20881-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,660 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : uaa-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,660 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : transaction-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,676 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : transaction-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,676 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,676 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,676 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,676 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,676 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,808 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,808 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:4) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,808 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : uaa-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,808 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : transaction-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,808 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,808 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,839 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:39,961 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,177 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryRoleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,208 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,224 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,224 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,224 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,224 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,224 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,239 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: loadResourcesUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,262 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryMenuUsingGET_1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,277 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: createAccountUsingPOST_1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,362 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.user.api.AuthorizationService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,362 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,409 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.user.api.AuthorizationService to local registry url : injvm://127.0.0.1/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,409 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.user.api.AuthorizationService to url dubbo://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,409 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,409 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.AuthorizationService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=spring-cloud&release=2.7.3&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,440 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.137.1:20880, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:40,462 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,404 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,404 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : uaa-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 DEBUG [DubboServerHandler-192.168.137.1:20881-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.AuthorizationService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=nacos&release=2.7.3&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,420 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,452 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,458 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,458 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587520362, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,458 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.user.api.MenuService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,473 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,473 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.user.api.MenuService to local registry url : injvm://127.0.0.1/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,473 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.user.api.MenuService to url dubbo://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,473 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,473 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.MenuService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=spring-cloud&release=2.7.3&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,473 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,836 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664, urls: [dubbo://192.168.137.1:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=13200&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1591587520362], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,858 INFO [com.alibaba.nacos.naming.client.listener][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.137.1:20880 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xa4ca3a5c, L:/192.168.137.1:60545 - R:/192.168.137.1:20880]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:41,858 INFO [com.alibaba.nacos.naming.client.listener][AbstractClient.java:71] -  [DUBBO] Start NettyClient Lidabingzhang/192.168.137.1 connect to the server /192.168.137.1:20880, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService] is being subscribed for service[name : uaa-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 DEBUG [DubboServerHandler-192.168.137.1:20881-thread-4][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.MenuService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.MenuService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.MenuService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.MenuService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.MenuService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.MenuService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,438 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.MenuService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=nacos&release=2.7.3&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,454 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,454 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,460 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,460 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.MenuService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.MenuService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.MenuService&methods=queryMenuByApplicationCode,queryMenuByPrivileges,queryMenu&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587521473, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,460 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.user.api.ResourceService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,475 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,475 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.user.api.ResourceService to local registry url : injvm://127.0.0.1/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,475 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.user.api.ResourceService to url dubbo://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,475 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,475 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.ResourceService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=spring-cloud&release=2.7.3&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:42,475 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService] is being subscribed for service[name : uaa-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 DEBUG [DubboServerHandler-192.168.137.1:20881-thread-5][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.ResourceService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.ResourceService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.ResourceService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.ResourceService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.ResourceService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.ResourceService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,493 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.ResourceService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=nacos&release=2.7.3&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,509 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,509 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,509 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,509 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.ResourceService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.ResourceService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.ResourceService&methods=queryApplication,createApplication,pageApplicationByConditions,loadResources,removeApplication,modifyApplication&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587522475, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,509 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.user.api.TenantService, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,525 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,540 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.user.api.TenantService to local registry url : injvm://127.0.0.1/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,540 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.user.api.TenantService to url dubbo://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,540 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,540 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.TenantService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=spring-cloud&release=2.7.3&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:43,556 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService] is being subscribed for service[name : uaa-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 DEBUG [DubboServerHandler-192.168.137.1:20881-thread-6][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService] is being subscribed for service[name : transaction-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : transaction-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,380 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,396 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.user.api.TenantService url dubbo://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=nacos&release=2.7.3&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,396 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,396 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,427 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,427 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&side=provider&timestamp=1591587523525, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,427 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56030"]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,458 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56030 (http) with context path '/user'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,496 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,496 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,496 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,496 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,496 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&bind.ip=192.168.137.1&bind.port=20880&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=user-service&dubbo=2.0.2&pid=13200&qos.enable=false&qos.port=22230&registry=nacos&release=2.7.3&timestamp=1591587524496, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,496 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,512 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,512 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,512 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&bind.ip=192.168.137.1&bind.port=20880&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=13200&qos.enable=false&qos.port=22230&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,512 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@36c45149" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" unexported="false" exported="true" version="1.0.0" dynamic="true" group="user-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,527 INFO [main][NacosServiceRegistry.java:62] - nacos registry, user-service 192.168.223.1:56030 register finished
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,543 INFO [main][StartupInfoLogger.java:59] - Started UserBootstrap in 26.84 seconds (JVM running for 30.073)
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:44,614 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179, urls: [dubbo://192.168.137.1:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.shanjupay.user.api.TenantService&pid=13200&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1591587523525], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,059 INFO [RMI TCP Connection(3)-127.0.0.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,074 INFO [RMI TCP Connection(3)-127.0.0.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,143 INFO [RMI TCP Connection(3)-127.0.0.1][FrameworkServlet.java:546] - Completed initialization in 69 ms
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,491 INFO [RMI TCP Connection(7)-127.0.0.1][EpollProvider.java:68] - Starting without optional epoll library
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,506 INFO [RMI TCP Connection(7)-127.0.0.1][KqueueProvider.java:70] - Starting without optional kqueue library
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,838 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,845 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,845 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,845 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,845 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,860 WARN [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,891 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, urls: [dubbo://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=13200&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,891 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, urls: [dubbo://192.168.137.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=13200&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1591587524496&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,891 INFO [com.alibaba.nacos.naming.client.listener][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=37156&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Duser-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D37156%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1591587526876%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587526876&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,938 DEBUG [DubboClientHandler-192.168.137.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,945 WARN [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,945 DEBUG [DubboClientHandler-192.168.137.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,945 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.137.1/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429179] will notify all URLs : [dubbo://192.168.223.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587523525]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,945 INFO [com.alibaba.nacos.naming.client.listener][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.223.1:20880 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x1aedec91, L:/192.168.223.1:60613 - R:/192.168.223.1:20880]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,945 INFO [com.alibaba.nacos.naming.client.listener][AbstractClient.java:71] -  [DUBBO] Start NettyClient Lidabingzhang/192.168.137.1 connect to the server /192.168.223.1:20880, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,945 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 DEBUG [DubboClientHandler-192.168.137.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.137.1/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=37156&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1591587429664] will notify all URLs : [dubbo://192.168.223.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=13200&register=true&release=2.7.3&side=provider&timestamp=1591587520362]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 DEBUG [DubboClientHandler-192.168.137.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810] will notify all URLs : []
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}] 2020-06-08 11:38:46,960 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.137.1:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.137.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=37156&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1591587436810, override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
